High Priority
-------------

* Lots of the protocol has not been implemented yet and is only a stub.
  Block removal and placement works, sort of. Getting basic
  creative mode play style going is the first step. [Pretty much there.]

* Dynamic blocks (water, lave) are missing ("physics").


Conveniece
----------

* We should make a "chunk inspection" mode for nbtimporter,
  basically just listing the available chunks.

* More stuff should be parametric: spawn position, map time.

* Further, those values should be editable from the UI.


Known Issues (may be easy to fix)
---------------------------------

* Block placement sometimes doesn't prevent placing a block in the position of the player
  (this seems to be because the target block is reported incorrectly).

* Currently, only ASCII characters are sent out correctly in strings, because I use
  a naive conversion to UTF16 by padding with zero. A genuine UTF8 to UTF16 conversion,
  restricted to the BMP, would be desirable.

* It is unclear whether the client can handle non-BMP characters. Surely sending the
  number of characters, as oppsed to the number of encoded bytes, does not inspire confidence.

* Door placement seems to be wrong when there are glass blocks on the right of the door
  (glass may have to be treated like air).


Mystery Puzzle of the Day
-------------------------

* The spawn location is wrong. With PLAYER_CHUNK_HORIZON = 5, you spawn inside the cave
  rather than on top. With PLAYER_CHUNK_HORIZON = 2, you do spawn correctly on top. Why?

* Shoveling snow or snow blocks with a diamond shovel doesn't seem to create a digging event.


Further Goals
-------------

* Completely server-side judication. Inventory and placement could be
  determined and validated entirely by the server.

* Consider making the unique objects (Server, ConnectionManager, Map, GameStateManager)
  into global objects to save function call overhead.



*******************************************************

Archive: Everything below here is no longer applicable.

*******************************************************



Highest Priority
----------------

* The network protocol isn't working right. A client can connect
  once after server start, but subsequent connections fail with
  varying errors. Getting the basic networking to function reliably
  is of the greatest importance.

Update: This may be better now, I fixed some silly typo-bugs ((X,X) instead of (X,Z) etc.).



High Priority
-------------

* Persistent map storage. Doesn't have to be NBT, anything sensible would be good.
  Maybe Boost::serialize.


Known Issues (may be easy to fix)
---------------------------------

* Lighting seems to miss a one-block wide strip along chunk boundaries, sometimes.

* Chunk zip cache and tainting doesn't seem to taint modified chunks in all cases (all non-0,0 chunks?).

* Light map doesn't get regenerated when loading tainted chunks.

* Light map generation doesn't seem to get under-water lighting right.

* Torch block saving broken (currenly just naive, Torch isn't attached to the correct neighbour).

